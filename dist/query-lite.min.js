(t=>{class Q{constructor(e,r=t.document,n=!1){let i=e&&q.isElement(r)?q.isQ(e)?e.toArray():q.isElement(e)||e==r?[e]:q.isFragment(e)?q.makeFragment(e):q.isArray(e)?q.settle(e):q.isFunction(e)?!window.addEventListener("DOMContentLoaded",e):r.querySelectorAll(e):[];if(n&&q.debug(e,r,i),!i)return!1;Object.assign(this,i),this.length=i.length}sift(t){return q(q.sift(this,t))}pipe(t){return q(this.map(t))}toArray(){return this.reduce(((t,e)=>t.concat([e])),[])}toString(){return this.reduce(((t,e)=>t+q.isElement(e)?e.outerHTML:`${e}`),"")}toText(){return this.reduce(((t,e)=>t+q.isElement(e)?e.innerText:`${e}`),"")}forEach=Array.prototype.forEach;map=Array.prototype.map;flatMap=Array.prototype.flatMap;reduce=Array.prototype.reduce;some=Array.prototype.some;every=Array.prototype.every;filter=Array.prototype.filter;slice=Array.prototype.slice}const q=(t,e,r)=>new Q(t,e,r);q.isElement=t=>t instanceof HTMLDocument||t instanceof HTMLElement||t instanceof SVGElement||t instanceof Element,q.isHTML=t=>t instanceof HTMLElement||t instanceof HTMLDocument,q.isSVG=t=>t instanceof SVGElement,q.isObject=t=>t instanceof Object&&null!==t&&!Array.isArray(t),q.isString=t=>"string"==typeof t||t instanceof String,q.isFunction=t=>"function"==typeof t,q.isQ=t=>t instanceof Q,q.isArray=t=>Array.isArray(t),q.isFragment=t=>q.isString(t)&&"<"==t.trim()[0],q.isEntity=t=>q.isString(t)&&"&"==t.trim()[0]&&";"==t.trim().substr(-1),q.isJson=t=>{t="string"!=typeof t?JSON.stringify(t):t;try{t=JSON.parse(t)}catch(t){return!1}return"object"==typeof t&&null!==t},q.parse=t=>{try{return JSON.parse(t)}catch(e){return t}},q.matching=t=>e=>{try{return!t||e.matches(t)}catch(t){return!1}},q.asArray=t=>Array.isArray(t)?t:[t],q.makeFragment=t=>q.isFragment(t)?[...document.createRange().createContextualFragment(t.trim()).childNodes]:[t],q.make=t=>q(q.makeFragment(t)),q.htmlEncode=function(t){let e=document.createElement("div");return e.innerHTML=t,e.innerText},q.extend=(t,e,r=!1)=>{q.asArray(t).forEach((t=>{q.hasExtension(t)&&!r||(Q.prototype[t]=e)}))},q.hasExtension=t=>q.isFunction(Q.prototype[t]),q.sift=(t,e)=>{let r=t.toArray().flatMap(e);return[...new Set(r)]},q.settle=t=>t.flatMap((t=>t?q.isFragment(t)?q.makeFragment(t):q.isQ(t)?t.toArray():t:[])),q.debug=(t,e,r)=>{const n=console.log;console.group(),n("debug"),n("selector",t),n("selector context",e),n("isHTML SC",q.isHTML(e)),n("isHTML S",q.isHTML(t)),n("isSVG S",q.isSVG(t)),n("isQ S",q.isQ(t)),n("isElement S",q.isElement(t)),n("isFragment S",q.isFragment(t)),n("isFunction S",q.isFunction(t)),n("isArray S",q.isArray(t)),n("isEntity S",q.isEntity(t)),n("isJson S",q.isJson(t)),n("isString S",q.isString(t)),n("isObject S",q.isObject(t));try{n("querySelectorAll S",e.querySelectorAll(t))}catch(t){}n("node list",r),console.groupEnd()},t.q=q})(window),(()=>{if(!q)throw"qjs not imported yet";q.getPath=t=>t.path||t.composedPath&&t.composedPath(),q.inPath=(t,e)=>q.getPath(t).some((t=>t==e)),q.evPoints=t=>"touch"!=t.type.substring(0,5)?[t]:t.touches.length?t.touches:t.changedTouches,q.getEXY=(t,e)=>{let r=(e||t.target).getBoundingClientRect();return{x:t.pageX-r.left,y:t.pageY-r.top}},q.getEventXY=(t,e)=>q.getEXY(q.evPoints(t)[0],e),q.extend("on",(function(t,e,r=!1){return t.trim().split(/\s+/).forEach((t=>{this.forEach((n=>n.addEventListener(t,e,r)))})),this})),q.extend("delegate",(function(t,e,r){return this.on(t,(t=>{this.find(e).forEach((e=>{q.inPath(t,e)&&r.call(e,t,e)}))}),{capture:!0}),this}))})();